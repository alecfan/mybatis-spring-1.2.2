<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--  AutoGenerated by lindzh  2015年11月20日 10:25 -->
<mapper namespace="org.mybatis.spring.cache.dao.OrderdetailInfoDao">

	<resultMap id="OrderdetailInfoResultMap" type="org.mybatis.spring.cache.pojo.OrderdetailInfo">
		<id property="id" column="id"/>
		<result property="team_id" column="team_id"/>
		<result property="quantity" column="quantity"/>
		<result property="partner_price" column="partner_price"/>
		<result property="team_price" column="team_price"/>
		<result property="partner_id" column="partner_id"/>
		<result property="distribution_id" column="distribution_id"/>
		<result property="replenish" column="replenish"/>
		<result property="order_id" column="order_id"/>
		<result property="create_time" column="create_time"/>
		<result property="fbi" column="fbi"/>
		<result property="user_id" column="user_id"/>
		<result property="udid" column="udid"/>
		<result property="buyer_id" column="buyer_id"/>
		<result property="openid" column="openid"/>
		<result property="community_id" column="community_id"/>
		<result property="clear_id" column="clear_id"/>
		<result property="state" column="state"/>
		<result property="split_number" column="split_number"/>
		<result property="activity_id" column="activity_id"/>
		<result property="team_title" column="team_title"/>
		<result property="presale" column="presale"/>
	</resultMap>
	
	<insert id="addOrderdetailInfo" useGeneratedKeys="true" keyProperty="id" parameterType="org.mybatis.spring.cache.pojo.OrderdetailInfo">
		insert into orderdetail(team_id,quantity,partner_price,team_price,partner_id,distribution_id,replenish,order_id,create_time,fbi,user_id,udid,buyer_id,openid,community_id,clear_id,state,activity_id,team_title,presale)
		 values(#{team_id},#{quantity},#{partner_price},#{team_price},#{partner_id},#{distribution_id},#{replenish},#{order_id},#{create_time},#{fbi},#{user_id},#{udid},#{buyer_id},#{openid},#{community_id},#{clear_id},#{state},#{activity_id},#{team_title},#{presale})
	</insert>
	
	<select id="getById" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where id=#{id}
	</select>
	
	<select id="getByTeamIdAndUserId" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where team_id=#{team_id} and user_id=#{user_id}
	</select>
	
	<select id="getByUserIdAndActivityIdNotCancel" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where user_id=#{user_id} and activity_id=#{activity_id} and state != 'cancel'
	</select>
	
	<select id="getByUserIdAndUdidAndActivityIdNotCancel" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where (user_id=#{user_id} or udid=#{udid}) and activity_id=#{activity_id} and state != 'cancel'
	</select>
	
	<select id="getByUserIdAndActivityIdAndCreateTimeNotCancel" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where user_id=#{user_id} and activity_id=#{activity_id} and create_time &gt;#{create_time} and state != 'cancel'
	</select>
	
	<select id="getByUserIdAndUdidAndActivityIdAndCreateTimeNotCancel" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where (user_id=#{user_id} or udid=#{udid}) and activity_id=#{activity_id} and create_time &gt;#{create_time} and state != 'cancel'
	</select>
	
	<select id="getByOpenidAndActivityIdNotCancel" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where openid=#{openid} and activity_id=#{activity_id} and state != 'cancel'
	</select>
	
	<select id="getByBuyerIdAndActivityIdNotCancel" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where buyer_id=#{buyer_id} and activity_id=#{activity_id} and state != 'cancel'
	</select>
	
	<select id="getByOpenidAndActivityIdAndCreateTimeNotCancel" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where openid=#{openid} and activity_id=#{activity_id} and create_time &gt;#{create_time} and state != 'cancel'
	</select>
	
	<select id="getByBuyerIdAndActivityIdAndCreateTimeNotCancel" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where buyer_id=#{buyer_id} and activity_id=#{activity_id} and create_time &gt;#{create_time} and state != 'cancel'
	</select>
	
	<update id="updateById" parameterType="org.mybatis.spring.cache.pojo.OrderdetailInfo">
		update orderdetail set team_id=#{obj.team_id},quantity=#{obj.quantity},partner_price=#{obj.partner_price},team_price=#{obj.team_price},
		partner_id=#{obj.partner_id},distribution_id=#{obj.distribution_id},replenish=#{obj.replenish},order_id=#{obj.order_id},create_time=#{obj.create_time},
		fbi=#{obj.fbi},user_id=#{obj.user_id},udid=#{obj.udid},buyer_id=#{obj.buyer_id},openid=#{obj.openid},community_id=#{obj.community_id},clear_id=#{obj.clear_id},state=#{obj.state}
		where id=#{obj.id}
	</update>
	
	<update id="updateSplitNumAndDistributionId">
		update orderdetail set 
		split_number=#{split_number},distribution_id=#{distribution_id}
		where id=#{id} and split_number = "" and distribution_id = 0;
	</update>
	
	<delete id="deleteById">
		delete from orderdetail where id=#{id}
	</delete>
	
	
	<select id="getListByOrderId" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where
		order_id=#{order_id} order by id desc
	</select>
	
	<select id="getListByOrderUserIdAndUdidAndCreteTime" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where team_id = #{team_id} and
		(user_id=#{user_id} or udid = #{udid}) and create_time &gt; #{create_time}
	</select>
	
	<select id="getListByUserIdAndTeamIdAndCreteTime" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where team_id = #{team_id} and
		user_id=#{user_id} and create_time &gt; #{create_time}
	</select>
	
	<select id="getByTeamIdUserIdAndUdid" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where team_id = #{team_id} and
		(user_id=#{user_id} or udid = #{udid})
	</select>
	
	<select id="getByTeamIdAndCreatTimeIsPayOrDelvering" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where team_id = #{team_id} and create_time &gt; #{create_time} and (state = 'pay' or state = 'delivering')
	</select>
	
	<select id="getByBuyerIdAndTeamIdAndAddTime" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where buyer_id = #{buyer_id}  and team_id = #{team_id} and create_time &gt; #{create_time}
	</select>
	
	<select id="getByOpenIdAndTeamIdAndAddTime" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where team_id = #{team_id} and openid = #{openid} and create_time &gt; #{create_time}
	</select>
	
	<select id="getFbiListByDistributionIdAndState" resultMap="OrderdetailInfoResultMap">
		select * from orderdetail where fbi = 1 and distribution_id = #{distribution_id}
	</select>
	
	<select id="getListByPartnerId" resultMap="OrderdetailInfoResultMap">
		SELECT * from orderdetail WHERE partner_id = #{partner_id} 
		<if test="state != 'all'">AND state = #{state}</if>
		ORDER BY create_time DESC
		LIMIT #{limit} offset #{offset}
	</select>
	
	<select id="getBySplitNumber" resultMap="OrderdetailInfoResultMap">
		SELECT * from dc.orderdetail WHERE split_number = #{split_number};
	</select>
	
	<update id="updateStateById">
		update orderdetail set 
		state=#{state}
		where id=#{id}
	</update>
	
	<update id="updateStateAndOpenidById">
		update orderdetail set 
		state=#{state},openid=#{openid}
		where id=#{id}
	</update>
	
	<update id="updateStateAndBuyIdById">
		update orderdetail set 
		state=#{state},buyer_id=#{buyer_id}
		where id=#{id}
	</update>
	
</mapper>