<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--  AutoGenerated by lindzh  2015年11月16日 18:46 -->
<mapper namespace="org.mybatis.spring.cache.dao.UserInfoDao">

	<resultMap id="UserInfoResultMap" type="org.mybatis.spring.cache.pojo.UserInfo">
		<id property="id" column="id"/>
		<result property="email" column="email"/>
		<result property="username" column="username"/>
		<result property="realname" column="realname"/>
		<result property="nickname" column="nickname"/>
		<result property="headimgurl" column="headimgurl"/>
		<result property="alipay_id" column="alipay_id"/>
		<result property="password" column="password"/>
		<result property="avatar" column="avatar"/>
		<result property="gender" column="gender"/>
		<result property="mobile" column="mobile"/>
		<result property="score" column="score"/>
		<result property="manager" column="manager"/>
		<result property="login_time" column="login_time"/>
		<result property="create_time" column="create_time"/>
		<result property="openid" column="openid"/>
		<result property="jihuo_time" column="jihuo_time"/>
		<result property="type" column="type"/>
		<result property="huhao" column="huhao"/>
		<result property="community_id" column="community_id"/>
		<result property="token" column="token"/>
		<result property="expire_time" column="expire_time"/>
		<result property="part" column="part"/>
		<result property="building" column="building"/>
		<result property="unit" column="unit"/>
		<result property="room" column="room"/>
		<result property="state" column="state"/>
		<result property="maxreadmessageid" column="maxreadmessageid"/>
		<result property="propertyfee" column="propertyfee"/>
		<result property="model" column="model"/>
		
		<result property="ip" column="ip"/>
		<result property="has_pay" column="has_pay"/>
		<result property="city_id" column="city_id"/>
		
		<result property="openid_app" column="openid_app"/>
		<result property="unionid" column="unionid"/>
		<result property="province_id" column="province_id"/>
		<result property="poi" column="poi"/>
		<result property="risk_rank" column="risk_rank"/>
	</resultMap>
	
	<insert id="addUserInfo" useGeneratedKeys="true" keyProperty="id" parameterType="org.mybatis.spring.cache.pojo.UserInfo">
		insert into user(email,username,realname,nickname,headimgurl,alipay_id,password,avatar,mobile,score,login_time,create_time,openid,jihuo_time,huhao,community_id,token,
		expire_time,model,ip,has_pay,city_id,openid_app,unionid,province_id,poi,risk_rank)
		 values(#{email},#{username},#{realname},#{nickname},#{headimgurl},#{alipay_id},#{password},#{avatar},#{mobile},#{score},#{login_time},#{create_time},#{openid},#{jihuo_time},#{huhao},#{community_id},#{token},
		 #{expire_time},#{model},#{ip},#{has_pay},#{city_id},#{openid_app},#{unionid},#{province_id},#{poi},#{risk_rank})
	</insert>
	
	<select id="getById" resultMap="UserInfoResultMap">
		select * from user where id=#{id}
	</select>
	
	<select id="getbyUnionid" resultMap="UserInfoResultMap">
		select * from user where unionid=#{unionid}
	</select>
	
	<update id="updateById" parameterType="org.mybatis.spring.cache.pojo.UserInfo">
		update user set email=#{obj.email},username=#{obj.username},realname=#{obj.realname},nickname=#{obj.nickname},
		headimgurl=#{obj.headimgurl},alipay_id=#{obj.alipay_id},password=#{obj.password},avatar=#{obj.avatar},gender=#{obj.gender},
		mobile=#{obj.mobile},score=#{obj.score},manager=#{obj.manager},login_time=#{obj.login_time},create_time=#{obj.create_time},
		openid=#{obj.openid},jihuo_time=#{obj.jihuo_time},huhao=#{obj.huhao},community_id=#{obj.community_id},token=#{obj.token},
		expire_time=#{obj.expire_time},part=#{obj.part},building=#{obj.building},unit=#{obj.unit},room=#{obj.room},state=#{obj.state},
		maxreadmessageid=#{obj.maxreadmessageid},propertyfee=#{obj.propertyfee},model=#{obj.model},ip=#{obj.ip},has_pay=#{obj.has_pay},city_id=#{obj.city_id},
		openid_app=#{obj.openid_app},unionid=#{obj.unionid},province_id=#{obj.province_id},poi=#{obj.poi},risk_rank=#{obj.risk_rank}
		where id=#{obj.id}
	</update>
	
	<delete id="deleteById">
		delete from user where id=#{id}
	</delete>
	
	<select id="getByMobile" resultMap="UserInfoResultMap">
		select * from user where mobile=#{mobile}
	</select>
	
	<select id="getByToken" resultMap="UserInfoResultMap">
		select * from user where token=#{token}
	</select>

	<select id="getByOpenid" resultMap="UserInfoResultMap">
		select * from user where openid=#{openid}
	</select>

	<select id="getListByCommunityAndPartAndBuildingAndUnit" resultMap="UserInfoResultMap">
		select * from user where
		community_id=#{community_id}
		<if test="part!=null">
		and part=#{part} 
		</if>
		and building=#{building} and unit=#{unit} and room=#{room}
		order by id desc limit #{limit} offset #{offset}
	</select>
	
	<select id="getCountByCommunityAndPartAndBuildingAndUnit" resultType="long">
		select count(*) from user where 
		community_id=#{community_id}
		<if test="part!=null">
		and part=#{part} 
		</if>
		and building=#{building} and unit=#{unit} and room=#{room}
	</select>
	
	<update id="updateScoreById">
		update user  set score = #{score} 
		where id = #{id}
	</update>
	
	<update id="updateRiskScoreById">
		update user  set risk_rank = #{riskScore} 
		where id = #{id} and risk_rank!=3
	</update>
	
	<update id="updateScoreAndHasPayById">
		update user  set score = #{score},has_pay = #{has_pay} 
		where id = #{id}
	</update>
	
	
	<update id="updateHaspayById">
		update user  set has_pay = #{has_pay} 
		where id = #{id}
	</update>
	
	<update id="updateTokenAndExpireById">
		update user  set token = #{token}, expire_time = #{expire_time}
		where id = #{id}
	</update>
	
	<update id="updatePassById">
		update user  set password = #{password}
		where id = #{id}
	</update>
	
	<update id="updateTokenAndExpireAndModelById">
		update user  set token = #{token}, expire_time = #{expire_time}, model = #{model}
		where id = #{id}
	</update>
	
	<update id="updateMaxreadmessageidById">
		update user  set maxreadmessageid = #{maxreadmessageid}
		where id = #{id}
	</update>
	
	<update id="updateCommunityIdAndCityIdById">
		update user  set community_id = #{community_id}, city_id = #{city_id}
		where id = #{id}
	</update>
	
</mapper>