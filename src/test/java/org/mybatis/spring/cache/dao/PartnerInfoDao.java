package org.mybatis.spring.cache.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;
import org.mybatis.spring.cache.CacheVersion;
import org.mybatis.spring.cache.OperateType;
import org.mybatis.spring.cache.RedisCache;
import org.mybatis.spring.cache.pojo.PartnerInfo;

import com.linda.common.mybatis.generator.annotation.Table;

/**
 * @author AutoGenerated by lindzh
 * 2015年11月18日 12:15
 */
@CacheVersion(value="v1.0")
@Table(name="partner")
public interface PartnerInfoDao {

	@RedisCache(operate=OperateType.INSERT,refKey="id",refPrefix="partner_")
	public int addPartnerInfo(PartnerInfo obj);

	@RedisCache(operate=OperateType.SELECT,key="id",prefix="partner_",refKey="id",refPrefix="partner_")
	public PartnerInfo getById(@Param("id")long id);
	
	
	@RedisCache(operate=OperateType.SELECT,key="id",prefix="partner_getByIdAndIsOpen_",refKey="id",refPrefix="partner_")
	public PartnerInfo getByIdAndIsOpen(@Param("id")long id);
	
	@RedisCache(operate=OperateType.SELECT,key="city_id",prefix="partner_getFbiPartnerByCityId_",refKey="id",refPrefix="partner_")
	public PartnerInfo getFbiPartnerByCityId(@Param("city_id")long cityId);
	
	@RedisCache(operate=OperateType.SELECT,key="city_id",prefix="partner_getListByFbiAndCityId_",refKey="id",refPrefix="partner_")
	public List<PartnerInfo> getListByFbiAndCityId(@Param("fbi")int fbi, @Param("city_id")Long cityId, @Param("limit") Integer limit, @Param("offset") Integer offset);
	
	/**
	 * 获取开业的商家
	 * @param id
	 * @return
	 */
	@RedisCache(operate=OperateType.MULTISELECT,key="id",prefix="partner_getByIdAndIsOpen_",refKey="id",refPrefix="partner_")
	public List<PartnerInfo> getByIdListAndIsOpen(List<Long> ids);
	
	/**
	 * 批量获取,先从缓存批量获取，获取不到在从db一个个获取
	 * @param ids
	 * @return
	 */
	@RedisCache(operate=OperateType.MULTISELECT,key="id",prefix="partner_",refKey="id",refPrefix="partner_")
	public List<PartnerInfo> getByIds(List<Long> ids);
	
	@RedisCache(operate=OperateType.SELECT,key="city_id",prefix="partner_getByGroupIdAndCityId_",refKey="id",refPrefix="partner_")
	public List<PartnerInfo> getByGroupIdAndCityId(@Param("group_id")long groupId, @Param("city_id")long cityId);
	
	@RedisCache(operate=OperateType.MULTISELECT,key="city_id",prefix="partner_getByGroupIdAndCityId_",refKey="id",refPrefix="partner_")
	public List<PartnerInfo> getByGroupIdsAndCityId(List<Map<String,Object>> groupIdAndCity);
	
	@RedisCache(operate=OperateType.UPDATE,refKey="id",refPrefix="partner_")
	public int updateById(@Param("obj")PartnerInfo obj);
	
	@RedisCache(operate=OperateType.UPDATE,refKey="id",refPrefix="partner_")
	public int updateBalanceByIdAndDif(@Param("id")long id, @Param("dif") double dif);
	
	@RedisCache(operate=OperateType.UPDATE,refKey="id",refPrefix="partner_")
	public int updateBalanceByGuaranteeFee(@Param("id")long id);
	
	@RedisCache(operate=OperateType.DELETE,refKey="id",refPrefix="partner_")
	public int deleteById(@Param("id")long id);
	
	@RedisCache(operate=OperateType.SELECT,key="mobile",prefix="partner_getByMobile_",refKey="id",refPrefix="partner_")
	public PartnerInfo getByMobile(@Param("mobile")String mobile);

	@RedisCache(operate=OperateType.UPDATE,refKey="id",refPrefix="partner_")
	public int updateCloseTimeAndStatusById(@Param("id")long id,@Param("newCloseTime")int newCloseTime);
	
	@RedisCache(operate=OperateType.UPDATE,refKey="id",refPrefix="partner_")
	public int updateStatusById(@Param("id")long id);
	
	public List<Long> getIds();

	@RedisCache(operate=OperateType.UPDATE,refKey="id",refPrefix="partner_")
	public int updateUvById(@Param("id")long id,@Param("uv")int uv);

	@RedisCache(operate=OperateType.UPDATE,refKey="id",refPrefix="partner_")
	public int updatePvById(@Param("id")long id,@Param("pv")int pv);

	@RedisCache(operate=OperateType.UPDATE,refKey="id",refPrefix="partner_")
	public int updateSaleById(@Param("id")long id,@Param("sale")int sale);
	
	@RedisCache(operate=OperateType.SELECT, key="city_id",prefix="partner_getCountByCityId_",refKey="id",refPrefix="partner_")
	public long getCountByCityId(@Param("city_id")long cityId);
	
	@RedisCache(operate=OperateType.SELECT, key="city_id",prefix="partner_getListByCityId_",refKey="id",refPrefix="partner_")
	public List<PartnerInfo> getListByCityId(@Param("city_id")long cityId,@Param("limit")int limit,@Param("offset") int offset);

}
